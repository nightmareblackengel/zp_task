1) Неавторизация

docker
- добавить параметры в .ENV и расконфигурировать данные

+ Реализация Авторизации
+ Страница настроек
+ страница "текст чата"

+ страница "создание нового чата"
- удаление истории согласно настройкам пользователей
страница поиска
    - форма поиска

CookieAlert
    - реализовать генерацию сообщений с Привязкой к дате и проверить будет ли обновляться кука
LoadPager
    ajax загрузка данных на странице чата
        - сообщения список
            - timeDownloaded
                - обновлять список чатов по таймеру 30сек
    - добавить переменную timer, повыносить загрузку по таймеру в отдельный метод; добавить методы остановки таймера и запуска таймера;
    - переделать хранение "кол-ва системных сообщений" с Хеша на строки
    (т.к. зависимости от пользователя - нет; все пользователи должны иметь возможность "не видеть" кол-во чужих системных сообщений)

что дaльше
    - общий вид:
    - сообщения
        - бан пользователя
            - сокрытие возможности отправлять сообщения
        - проверить добавляются ли на Div у сообщений "ид собщения"?!?!
        - когда аякс подзагружается то он всегда скролит сообщения до самого низа, даже несмотря на то, что пользователь скролит вверх

        - тип сообщений "чат" (дополнительная плашка и информация)
            - название и кол-во пользователей
    - комманды
        -

+ сессии
- комманды чата

Польовательский ввод
- все места где пользователь вводит инфу - проверить
- html::encode

После всего:
- нарисовать себе логику "хранения куки" при авторизации, и попытки взлома
- удалить все бд и поднять все миграции заново
- развернуть докеры на другом компьютрее

нагрузочное тестирование:
- юнит тесты которые будут "перегружать" систему
    - а затем смотреть логи БД на медленные запросы

удалить
    -
проверки:
    - todos
    - страница сообщений
    - remove AJAX_RESPONSE_NOT_FILLED
    - очень длинные имена пользователей
    - очень длинные сообщения!

- моделирование комманды "Отложенное сообщение"
    - написание моделей
        - модешоь zorder sets [link on lists]
        - model lists [chatId, userId, message]
    - добавление крона на каждую минуту
        - с обработкой каждой секунды
        - добавление тестовой модели (1800 элементов в каждом list + 60 секунд из 60ти в zorder должны быть заполнены)
            вариации:
                - разное секундное время запуска, поэтому старт с 0 секунд данной минуты и включительно 60ю секунду
        - возможность запуска нескольких кронов одновременно
