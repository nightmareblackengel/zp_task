server {
	port 80;
}

#  server { # php/fastcgi
#    listen       80;
#    server_name  domain1.com www.domain1.com;
#    access_log   logs/domain1.access.log  main;
#    root         html;
#
#    location ~ \.php$ {
#      fastcgi_pass   127.0.0.1:1025;
#    }
#  }

#  server { # simple reverse-proxy
#    listen       80;
#    server_name  domain2.com www.domain2.com;
#    access_log   logs/domain2.access.log  main;
#
#    # serve static files
#    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
#      root    /var/www/virtual/big.server.com/htdocs;
#      expires 30d;
#    }
#
#    # pass requests for dynamic content to rails/turbogears/zope, et al
#    location / {
#      proxy_pass      http://127.0.0.1:8080;
#    }
#  }
#################################################################
#  upstream big_server_com {
#    server 127.0.0.3:8000 weight=5;
#    server 127.0.0.3:8001 weight=5;
#    server 192.168.0.1:8000;
#    server 192.168.0.1:8001;
#  }

#  server { # simple load balancing
#    listen          80;
#    server_name     big.server.com;
#    access_log      logs/big.server.access.log main;
#
#    location / {
#      proxy_pass      http://big_server_com;
#    }
#  }
####################################################################
	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

##############################################
        #- NGINX_HOST=xxx.loc
        #- NGINX_PORT=80



    # docker-compose -f build/docker-compose.yml up